<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>420</w>
      <h>610</h>
    </coordinates>
    <panel_attributes>ExtractMinimal
--
- g: Grafoi
- h: Grafoi
- m: Grafoi
- minimal: boolean
- j: int
- sumLeft: int
- sumRight: int
- f: List&lt;Pair&lt;String,String&gt;&gt;
- f_: List&lt;Pair&lt;String,String&gt;&gt;
- degree: HashMap&lt;Integer, Boolean&gt;
- degreeArray: DoubleDegreeList[]
- nonIncreasingDegreeList: DoubleDegreeList
- arrayPointers: Node[]
- sortedVertexesByDegree: List&lt;Integer&gt;[]
- minimumindex: int
+ graph: Graph
--
run()
updateMinimumIndex()
deleteOrMoveVertexNodeAfterFillEdgeRemoval(Node, Node)
deleteMinimumFillEdgeNode(Node)
deleteFillEdgeNode(Node)
updateJ(Edge)
updateSums(int)
updateUpdate(int)
updateSumRight(int)
UpdateSumLeft(int)
isSplit()
constructDegrees(): boolean
constructDegreeArray(List&lt;Pair&lt;String, String)
getNodeMemoryPool(int)
addVertexInDegreeArray(DoubleDegreeList[], Vertex): Node
addFillEdgeInVertexNode(Node, Edge, NodeMemoryPool): Node
linkFillEdges(Node, Node)
updateMinimumIndex(int, Vertex, Vertex): int
input()
printF()

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>0</y>
      <w>430</w>
      <h>420</h>
    </coordinates>
    <panel_attributes>Grafoi
--
vert : List&lt;String&gt;
edges : List&lt;Pair&lt;String, String&gt;&gt;
vertexDegrees : HashMap&lt;String, Integer&gt;
neighborsOfVertex : HashMap&lt;String, List&lt;String&gt;&gt;
incidentEdgesOfVertex : HahMap&lt;String, List&lt;Pair&lt;String, String&gt;&gt;&gt;
--
containsEdge(Pair&lt;String,String&gt;): boolean
edgeExists(Pair&lt;String,String&gt;): boolean
containsEdge(String, String): boolean
addVertex(String)
removeVertex(String)
addEdge(Pair&lt;String,String)
addEdge(String, String)
removeEdge(Pair&lt;String,String&gt;)
vertexList(): List&lt;String&gt;
edgeList(): List&lt;Pair&lt;String, String&gt;&gt;
degreeOf(String): int
isSplit(): boolean
getNeighborsListOf(String): List&lt;String&gt;
printEdgeList()
increaseDegreeOfVertex(String)
increaseNrighborsOfVertex(String, String)
initializeNeighborMap()
initializeDegreeMap()

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>340</x>
      <y>120</y>
      <w>310</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>MinimalSplit

--
- g: Grafoi
- h: Grafoi
- g1: Graph
- K: ArrayList&lt;String&gt;
- I: ArrayList&lt;String&gt;
- f: ArrayList&lt;Pair&lt;String,String&gt;&gt;
- sortedVertexesbyDegree: DoubleDegreeList[]
- pointer: int
- unmarkedVertices: int
--
run()
MarkAndAddVertexToI(Vertex)
updateMinumumPointer(int): int 
MarkAndAddNeighborsToK(Vertex)
computeDegreesInIncreasingOrder()
addFillEdges()
input()

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>710</x>
      <y>140</y>
      <w>290</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>SplitGraphSequence
--
- g1 : Grafoi
- g2 : Grafoi
- gOut : Grafoi
- j : int
- maxDegree : int
- x : String
- f : Set&lt;Pair, String, String&gt;
- K : Set&lt;String&gt;
- I : Set&lt;String&gt;
- I_ : Set&lt;String&gt;
- K_ : Set&lt;String&gt;
- T : Set&lt;String&gt;
- T_ : Set&lt;String&gt;
--
run()
removeNeighborsOfVertexFromT(String)
maximumVertexDegreeOfI_() : String
testIncidence(Pair&lt;String, String&gt;) : boolean
removeFillEdges()
printGraphAfterDelteOfFillEdge(Grafoi)
findT()
input()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>100</y>
      <w>310</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Graph
--
- vertices : List&lt;Vertex&gt;
- edges : List&lt;Edge&gt;
- fillEdges : List&lt;Edge&gt;
- edges2 : Map&lt;Edge, Boolean&gt;
- fillEdges2 : Set&lt;Pair,String, String&gt;
- vertexIdMap : Map&lt;String, Vertex&gt;
--
from(Grafoi, List&lt;Pair,String, String&gt;) :  Graph
deleteEdge(Edge)
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
